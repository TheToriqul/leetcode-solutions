name: Sync LeetCode Solutions

on:
  schedule:
    - cron: '0 0 1 * *'    # Run at midnight on the 1st day of every month
  workflow_dispatch:        # Manual trigger

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}
      
      - name: Set up Git credentials
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git config --global core.autocrlf false
          git config --global core.safecrlf false
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run sync script
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
          GITHUB_REPO: ${{ github.repository }}
          LEETCODE_SESSION: ${{ secrets.LEETCODE_SESSION }}
        run: python sync_leetcode.py

      - name: Commit and push changes
        run: |
          # Force Git to look for changes
          git add -A
          
          # Check if there are any changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            echo "Changes detected, committing..."
            # Pull latest changes to avoid conflicts
            git pull origin main --rebase
            
            # Commit and push changes
            git commit -m "chore: sync leetcode solutions [skip ci]"
            git push origin main
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      - name: Debug information
        if: always()
        run: |
          echo "Git status:"
          git status
          
          echo "Recent commits:"
          git log -3 --oneline
          
          echo "Changed files:"
          git diff --name-only HEAD~1 HEAD || echo "No changes"