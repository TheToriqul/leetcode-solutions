name: Sync LeetCode Solutions

on:
  schedule:
    - cron: '0 0 1 * *'  # Run monthly
  workflow_dispatch:      # Manual trigger


# Concurrency to prevent overlapping runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  sync:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Prevent hanging jobs
    
    # Environment for secrets management
    environment: production
    
    permissions:
      contents: write    # Explicitly declare required permissions
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Using latest stable version
        with:
          fetch-depth: 1  # Shallow clone for better performance
          token: ${{ secrets.GH_PAT }}
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
          check-latest: true
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        
      - name: Run sync script
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
          GITHUB_REPO: ${{ github.repository }}
          LEETCODE_SESSION: ${{ secrets.LEETCODE_SESSION }}
        run: |
          # Enable error handling
          set -eo pipefail
          
          # Run sync script with proper error handling
          python sync_leetcode.py || {
            echo "::error::Sync script failed"
            exit 1
          }

      - name: Check for changes
        id: git-check
        run: |
          git status --porcelain
          echo "changes=$(git status --porcelain | wc -l)" >> $GITHUB_OUTPUT

      - name: Configure Git
        if: steps.git-check.outputs.changes > 0
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Commit and push if changed
        if: steps.git-check.outputs.changes > 0
        run: |
          # Pull latest changes with retry logic
          for i in 1 2 3; do
            if git pull --rebase origin main; then
              break
            fi
            if [ $i -eq 3 ]; then
              echo "::error::Failed to pull latest changes after 3 attempts"
              exit 1
            fi
            sleep 5
          done
          
          git add -A
          git commit -m "chore: sync leetcode solutions [skip ci]
          
          Automated sync of LeetCode solutions
          - Timestamp: $(date -u +'%Y-%m-%d %H:%M:%S UTC')
          - Workflow: ${{ github.workflow }}
          - Run: ${{ github.run_id }}"
          
          # Push with retry logic
          for i in 1 2 3; do
            if git push origin main; then
              break
            fi
            if [ $i -eq 3 ]; then
              echo "::error::Failed to push changes after 3 attempts"
              exit 1
            fi
            sleep 5
          done